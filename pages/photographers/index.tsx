import React from "react";
import Head from "next/head";
import { GetStaticProps } from "next";
import { useRouter } from "next/router";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useQuery } from "react-query";
import { PhotographersService } from "@/api/photographers";
import { Space, Pagination, Row } from "antd";

import PhotographerCard from "@/components/organism/PhotographerCard/PhotographerCard";
import { useTranslation } from "next-i18next";

import { Filters } from "@/components/organism/Filters/Filters";

const Photographers: React.FC = () => {
  const router = useRouter();
  const { t } = useTranslation();
  const [filters, setFilters] = React.useState<any>({ page: 1, limit: 10 });

  const { data, isLoading } = useQuery(
    ["profiles", filters],
    PhotographersService.getPhotographers,
  );

  React.useEffect(() => {
    setFilters({
      page: router?.query?.page,
      limit: router?.query?.limit,
      search: router?.query?.search,
      city: router?.query?.city,
      sort: router?.query?.sort,
    });
  }, [router.query]);

  const onChangePageSize = (current: number, size: number) => {
    const { query } = router;

    if (current) query.page = current.toString();
    if (size) query.limit = size.toString();

    setFilters({ page: query.page, limit: query.limit });

    router.push({ pathname: router.pathname, query: query });
  };

  return (
    <>
      <Head>
        <title>Photographers</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="section">
        <Space style={{ width: "1000px" }} size="large" direction="vertical">
          <h2 className="title">{t("photographers:photographer_msg")}</h2>
          <Filters />
          {data?.profiles.map((user: any) => (
            <PhotographerCard user={user} key={user._id} />
          ))}
          <Row justify="end">
            <Pagination
              showSizeChanger
              onChange={onChangePageSize}
              total={data?.total}
              showTotal={(total) => `Total ${total} photographers`}
              defaultPageSize={filters.limit}
              defaultCurrent={filters.page}
            />
          </Row>
        </Space>
      </section>
    </>
  );
};

export const getStaticProps: GetStaticProps<any> = async ({ locale }: any) => {
  return {
    props: {
      ...(await serverSideTranslations(
        locale,
        ["common", "home", "layout", "sign", "photographers", "notification", "form"],
        null,
        ["en", "ro", "ru"],
      )),
    },
  };
};

export default Photographers;
