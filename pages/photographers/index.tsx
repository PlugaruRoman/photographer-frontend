import React from "react";
import Head from "next/head";
import { DehydratedState, QueryClient, dehydrate } from "react-query";
import { PhotographersService } from "@/api/photographers";
import { IDehydrated } from "@/types/Dehydrated";
import { Card, Space } from "antd";
import { GetServerSideProps } from "next";
import PhotographerCard from "@/components/organism/PhotographerCard/PhotographerCard";

interface PhotographersProps {
  dehydratedState: IDehydrated;
}

const Photographers: React.FC<PhotographersProps> = ({ dehydratedState }) => {
  return (
    <>
      <Head>
        <title>Photographers</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="section">
        <Space size="large" direction="vertical">
          <h1 className="title">Picture Perfect: A Directory of Top Photographers</h1>
          {dehydratedState?.queries[0]?.state.data.map((user) => (
            <PhotographerCard user={user} key={user._id} />
          ))}
        </Space>
      </section>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (): Promise<{
  props: { dehydratedState: DehydratedState };
}> => {
  const queryClient = new QueryClient();
  await queryClient.fetchQuery(["photographers"], PhotographersService.getPhotographers);

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};

export default Photographers;
