import Head from "next/head";
import React from "react";
import { QueryClient, dehydrate, useQuery } from "react-query";
import { PhotographersService } from "@/api/photographers/photographers";
import { PhotographerCard } from "@/components/organism/PhotographerCard/PhotographerCard";

export interface PhotographersProps {
  dehydratedState: {
    mutations: any[];
    queries: [
      {
        state: {
          data: {
            data: [
              {
                id: number;
                attributes: {
                  about: string;
                  firstname: string;
                  lastname: string;
                  company: string;
                  city: string;
                  price: number;
                  phone: string;
                  facebook: string;
                  instagram: string;
                  twitter: string | any;
                  web: string;
                  createdAt: string;
                  updatedAt: string;
                  publishedAt: string;
                };
              },
            ];
            meta: {
              pagination: {
                page: number;
                pageSize: number;
                pageCount: number;
                total: number;
              };
            };
          };
          dataUpdateCount: number;
          dataUpdatedAt: number;
          error: null | any;
          errorUpdateCount: number;
          errorUpdatedAt: number;
          fetchFailureCount: number;
          fetchMeta: null | any;
          isFetching: boolean;
          isInvalidated: boolean;
          isPaused: boolean;
          status: string;
        };
        queryKey: string;
        queryHash: string;
      },
    ];
  };
}

const Photographers: React.FC<PhotographersProps> = ({ dehydratedState }) => {
  return (
    <>
      <Head>
        <title>Photographers</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        style={{
          padding: "30px 0px 30px 0px",
          background: "#1B2026",
          minHeight: "100vh",
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        {dehydratedState.queries[0].state.data.data.map((user: any) => (
          <PhotographerCard info={user.attributes} id={user.id} key={user.id} />
        ))}
      </main>
    </>
  );
};

export default Photographers;

export const getServerSideProps = async () => {
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery("all-Photographers", PhotographersService.getPhotographers);

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};
